# Generated by Django 4.2.1 on 2023-06-13 14:43

import accounts.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAccounts',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('uid', models.CharField(default='U_689', max_length=255, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('email', models.CharField(max_length=255, null=True, unique=True)),
                ('Country', models.CharField(max_length=255, null=True)),
                ('otp', models.CharField(max_length=6, null=True)),
                ('State', models.CharField(max_length=255, null=True)),
                ('City', models.CharField(max_length=255, null=True)),
                ('Date_of_Birth', models.DateField(null=True)),
                ('ProfilePic', models.ImageField(null=True, upload_to=accounts.models.UserAccounts.FileName)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
